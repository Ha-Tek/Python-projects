# Solve nonlinear programming using IPOPT solver

import pyomo.environ as pyo
#from pyomo.environ import *
from pyomo.opt import SolverFactory

# Create concrete model
model = pyo.ConcreteModel()

# Decision variables with bounds
model.x = pyo.Var(bounds=(0,10)) 
model.y = pyo.Var(bounds=(0,10)) 

x = model.x
y = model.y

# Define the objective function
model.obj = pyo.Objective(expr=2*x + 3*x*y, sense = pyo.maximize)

# Define the constraints
model.constraint1 = pyo.Constraint(expr=3*x + 4*y <= 25)
model.constraint2 = pyo.Constraint(expr=2*x*y + 5*y <= 30)

# Solve the nonlinear optimization problem using solver ipopt
solver = pyo.SolverFactory('ipopt', executable = "/Users/hailemariam/Desktop/Ipopt-3.11.1-mac-osx-x86_64-gcc4.5.3/bin/ipopt")  # Choose the solver and the folder
solver.solve(model)

# Print the solution
print("Objective value:", model.obj())
print("x =", model.x())
print("y =", model.y())
